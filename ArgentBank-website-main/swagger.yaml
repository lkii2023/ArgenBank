swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
          # transaction module
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transactions for the current month
      description: API to retrieve transactions for the current month with a specified date and order them.
      parameters:
        - in: query
          name: date
          required: true
          description: Date in YYYY-MM-DD format to filter transactions for the current month.
          type: string
        - in: query
          name: order_by
          required: false
          description: Field by which transactions should be ordered.
          type: string
          enum: [date, amount]
          default: date
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully for the current month.
          schema:
          examples:
            application/json:
              - transactionId: "string"
                amount: 0
                description: "string"
                date: "YYYY-MM-DD"
        "400":
          description: Invalid date or missing parameter.
        "401":
          description: Unauthorized - User must be authenticated.
        "500":
          description: Internal Server Error.
  /user/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction Details
      description: API to retrieve details of transactions
      parameters:
        - in: path
          name: transactionId
          required: true
          description: ID of the transaction to retrieve
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized - User must be authenticated
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: Updates the category and note of a specific transaction for the given user.
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: Transaction ID to be updated.
        - in: body
          name: body
          required: true
          description: New category ID and note for the transaction.
          schema:
            type: object
            properties:
              categoryId:
                type: string
              note:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully.
          schema:
            type: object
            properties:
              transactionId:
                type: string
              categoryId:
                type: string
              note:
                type: string
        "400":
          description: Invalid request if data is incomplete or incorrect.
        "401":
          description: Unauthorized - User must be authenticated.
        "404":
          description: User or transaction not found.
        "500":
          description: Internal Server Error.

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name
  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionList:
    type: array
    items:
      type: object
      properties:
        transactionId:
          type: string
        amount:
          type: number
        description:
          type: string
  Transaction:
    type: object
    properties:
      transactionId:
        type: string
      amount:
        type: number
      description:
        type: string
  TransactionUpdate:
    type: object
    properties:
      amount:
        type: number
      description:
        type: string
      categoryId:
        type: string
